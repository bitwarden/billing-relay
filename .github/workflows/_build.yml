name: _build
run-name: Build ${{ inputs.project-name }}

on:
  workflow_call:
    inputs:
      project-name:
        type: string
        required: true
      project-path:
        type: string
        required: true
      version:
        type: string
        required: true

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      _PROJECT_PATH: ${{ inputs.project-path }}
      _PROJECT_NAME: ${{ inputs.project-name }}
      _VERSION: ${{ inputs.version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0

      - name: Cache NuGet packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore "$_PROJECT_PATH/$_PROJECT_NAME.csproj"

      - name: Build
        run: dotnet build --verbosity minimal "$_PROJECT_PATH/$_PROJECT_NAME.csproj"

      - name: Publish
        run: |
          echo "Publish"
          dotnet publish "$_PROJECT_PATH/$_PROJECT_NAME.csproj" \
            -c Release --no-restore \
            -o "./tmp/publish-$_PROJECT_NAME" -p:"Version=$_VERSION"

      - name: Create artifact
        run: |
          cd "./tmp/publish-$_PROJECT_NAME"
          zip -r "$_PROJECT_NAME.zip" .
          mv "$_PROJECT_NAME.zip" ../../
          pwd
          ls -atlh ../../

      - name: Upload artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ inputs.project-name }}.zip
          path: ./${{ inputs.project-name }}.zip
          if-no-files-found: error
